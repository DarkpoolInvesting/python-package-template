{% raw %}name: Release

on:
  release:
    types: [ published ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["{{ cookiecutter.minimal_python_version }}"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.0.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: make poetry-download

      - name: Set up cache
        uses: actions/cache@v4.0.0
        with:
          path: .venv
          key: venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install

      - name: Run style checks
        run: |
          make check-codestyle

      - name: Run tests
        run: |
          make test

      - name: Run safety checks
        run: |
          make check-safety

      - name: Build
        run: |
          TEMP_TAG=${{ github.event.release.tag_name }}
          TEMP_VERSION="${TEMP_TAG//v/}"
          poetry version $TEMP_VERSION
          poetry build

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*{% endraw %}
